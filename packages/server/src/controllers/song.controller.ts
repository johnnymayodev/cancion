import type { Context } from "hono";

import songService from "@/services/song.service";

import env from "@/utilities/env";

// Utilities
import { getSongFromAppleMusic } from "@/utilities/applemusic";
import { getAlbumArtURLFromGenius } from "@/utilities/genius";

export const getSong = async (c: Context) => {
  const { id } = c.req.param();

  if (!id) {
    return c.json({ error: "ID is required" }, 400);
  }

  const song = await songService.getSong(id);
  return c.json(song);
};

export const getSongFromURL = async (c: Context) => {
  const { title, albumID } = c.req.param();
  const { i: songID } = c.req.query();

  if (!title || !albumID || !songID) {
    return c.json({ error: "Missing required parameters" }, 400);
  }

  const url = `https://music.apple.com/us/album/${title}/${albumID}?i=${songID}`;

  const song = await songService.getSongFromURL(url);

  if (!song) {
    const songInfo = await getSongFromAppleMusic(url);

    if (!env.GENIUS_API_KEY) {
      return c.json({ error: "Song Service: GENIUS_API_KEY is not set" }, 500);
    }

    const albumArtURL = await getAlbumArtURLFromGenius({
      apiKey: env.GENIUS_API_KEY,
      title: songInfo.Title,
      artist: songInfo.Artist,
      optimizeQuery: true,
      authHeader: true,
    });

    const savedSong = await songService.saveSong({
      ...songInfo,
      UUID: "", // Will be generated by saveSong function
      AlbumArtURL: albumArtURL,
    } as any);
    return c.json(savedSong);
  }

  return c.json(song);
};

export const getSongs = async (c: Context) => {
  const songs = await songService.getSongs();
  return c.json(songs);
};
